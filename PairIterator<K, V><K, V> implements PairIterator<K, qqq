[1mdiff --git a/src/main/java/com/coroptis/index/sst/PairSupplierRefreshedFromCache.java b/src/main/java/com/coroptis/index/sst/PairSupplierRefreshedFromCache.java[m
[1mdeleted file mode 100644[m
[1mindex 2dd8d4d..0000000[m
[1m--- a/src/main/java/com/coroptis/index/sst/PairSupplierRefreshedFromCache.java[m
[1m+++ /dev/null[m
[36m@@ -1,43 +0,0 @@[m
[31m-package com.coroptis.index.sst;[m
[31m-[m
[31m-import java.util.Objects;[m
[31m-[m
[31m-import com.coroptis.index.Pair;[m
[31m-import com.coroptis.index.PairReader;[m
[31m-import com.coroptis.index.cache.UniqueCache;[m
[31m-import com.coroptis.index.datatype.TypeDescriptor;[m
[31m-[m
[31m-public class PairSupplierRefreshedFromCache<K, V>[m
[31m-        implements PairReader<K, V> {[m
[31m-[m
[31m-    private final PairReader<K, V> pairReader;[m
[31m-    private final UniqueCache<K, V> cache;[m
[31m-    private final TypeDescriptor<V> valueTypeDescriptor;[m
[31m-[m
[31m-    PairSupplierRefreshedFromCache(final PairReader<K, V> pairReader,[m
[31m-            final UniqueCache<K, V> cache, final TypeDescriptor<V> valueTypeDescriptor) {[m
[31m-        this.pairReader = Objects.requireNonNull(pairReader);[m
[31m-        this.cache = Objects.requireNonNull(cache);[m
[31m-        this.valueTypeDescriptor = Objects.requireNonNull(valueTypeDescriptor);[m
[31m-    }[m
[31m-[m
[31m-    @Override[m
[31m-    public Pair<K, V> read() {[m
[31m-        while(true){[m
[31m-            final Pair<K, V> pair = pairReader.read();[m
[31m-            if (pair == null) {[m
[31m-                return null;[m
[31m-            }[m
[31m-            final V value = cache.get(pair.getKey());[m
[31m-            if (value == null) {[m
[31m-                return pair;[m
[31m-            }[m
[31m-            if(valueTypeDescriptor.isTombstone(value)){[m
[31m-                //nextRound[m
[31m-            }else{[m
[31m-                return Pair.of(pair.getKey(), value);[m
[31m-            }[m
[31m-        }[m
[31m-    }[m
[31m-[m
[31m-}[m
[1mdiff --git a/src/main/java/com/coroptis/index/sst/SstIndexImpl.java b/src/main/java/com/coroptis/index/sst/SstIndexImpl.java[m
[1mindex 7d42b9b..172b827 100644[m
[1m--- a/src/main/java/com/coroptis/index/sst/SstIndexImpl.java[m
[1m+++ b/src/main/java/com/coroptis/index/sst/SstIndexImpl.java[m
[36m@@ -121,7 +121,7 @@[m [mpublic class SstIndexImpl<K, V> implements Index<K, V> {[m
     public Stream<Pair<K, V>> getStream() {[m
         indexState.tryPerformOperation();[m
         final PairIterator<K, V> iterator = openIterator();[m
[31m-        final PairReader<K, V> reader = new PairSupplierRefreshedFromCache<>([m
[32m+[m[32m        final PairReader<K, V> reader = new PairReaderRefreshedFromCache<>([m
                 new PairSupplierFromIterator<>(iterator), cache, valueTypeDescriptor);[m
         final StreamSpliteratorFromPairSupplier<K, V> spliterator = new StreamSpliteratorFromPairSupplier<>([m
                 reader, keyTypeDescriptor);[m
[1mdiff --git a/src/test/java/com/coroptis/index/sst/PairSupplierRefreshedFromCacheTest.java b/src/test/java/com/coroptis/index/sst/PairSupplierRefreshedFromCacheTest.java[m
[1mdeleted file mode 100644[m
[1mindex d2231d1..0000000[m
[1m--- a/src/test/java/com/coroptis/index/sst/PairSupplierRefreshedFromCacheTest.java[m
[1m+++ /dev/null[m
[36m@@ -1,108 +0,0 @@[m
[31m-package com.coroptis.index.sst;[m
[31m-[m
[31m-import static org.junit.jupiter.api.Assertions.assertEquals;[m
[31m-import static org.junit.jupiter.api.Assertions.assertNull;[m
[31m-import static org.mockito.Mockito.when;[m
[31m-[m
[31m-import org.junit.jupiter.api.Test;[m
[31m-import org.junit.jupiter.api.extension.ExtendWith;[m
[31m-import org.mockito.Mock;[m
[31m-import org.mockito.junit.jupiter.MockitoExtension;[m
[31m-[m
[31m-import com.coroptis.index.Pair;[m
[31m-import com.coroptis.index.PairReader;[m
[31m-import com.coroptis.index.cache.UniqueCache;[m
[31m-import com.coroptis.index.datatype.TypeDescriptor;[m
[31m-import com.coroptis.index.datatype.TypeDescriptorString;[m
[31m-[m
[31m-@ExtendWith(MockitoExtension.class)[m
[31m-public class PairSupplierRefreshedFromCacheTest {[m
[31m-[m
[31m-    private final static Pair<Integer, String> pair2 = Pair.of(2,"bbb");[m
[31m-    private final static Pair<Integer, String> pair3 = Pair.of(3,"ccc");[m
[31m-    private final static Pair<Integer, String> pair4 = Pair.of(4,"ddd");[m
[31m-    [m
[31m-    private final static TypeDescriptor<String> std = new TypeDescriptorString();[m
[31m-[m
[31m-    @Mock[m
[31m-    private PairReader<Integer, String> segmentReader;[m
[31m-[m
[31m-    @Mock[m
[31m-    private UniqueCache<Integer, String> cache;[m
[31m-[m
[31m-    @Test[m
[31m-    void test_get_from_segment_and_not_in_cache() {[m
[31m-        final PairSupplierRefreshedFromCache<Integer, String> supplier = new PairSupplierRefreshedFromCache<>([m
[31m-                segmentReader,[m
[31m-                cache, std);[m
[31m-        [m
[31m-        when(segmentReader.read()).thenReturn(pair2);[m
[31m-        when(cache.get(2)).thenReturn(null);[m
[31m-[m
[31m-        assertEquals(pair2, supplier.read());[m
[31m-    }[m
[31m-[m
[31m-    @Test[m
[31m-    void test_get_from_segment_and_updated_in_cache() {[m
[31m-        final PairSupplierRefreshedFromCache<Integer, String> supplier = new PairSupplierRefreshedFromCache<>([m
[31m-                segmentReader,[m
[31m-                cache,std);[m
[31m-        [m
[31m-        when(segmentReader.read()).thenReturn(pair2);[m
[31m-        when(cache.get(2)).thenReturn("eee");[m
[31m-[m
[31m-        assertEquals(Pair.of(2, "eee"), supplier.read());[m
[31m-    }[m
[31m-[m
[31m-    @Test[m
[31m-    void test_get_not_in_segment() {[m
[31m-        final PairSupplierRefreshedFromCache<Integer, String> supplier = new PairSupplierRefreshedFromCache<>([m
[31m-                segmentReader,[m
[31m-                cache, std);[m
[31m-        [m
[31m-        when(segmentReader.read()).thenReturn(null);[m
[31m-[m
[31m-        assertNull(supplier.read());[m
[31m-    }[m
[31m-[m
[31m-    [m
[31m-    @Test[m
[31m-    void test_get_from_segment_and_deleted_in_cache_not_other_pair_in_segment() {[m
[31m-        final PairSupplierRefreshedFromCache<Integer, String> supplier = new PairSupplierRefreshedFromCache<>([m
[31m-                segmentReader,[m
[31m-                cache, std);[m
[31m-        [m
[31m-        when(segmentReader.read()).thenReturn(pair2).thenReturn(null);[m
[31m-        when(cache.get(2)).thenReturn(std.getTombstone());[m
[31m-[m
[31m-        assertNull(supplier.read());[m
[31m-    }[m
[31m-    [m
[31m-    @Test[m
[31m-    void test_two_pairs_are_deleted_third_is_ok() {[m
[31m-        final PairSupplierRefreshedFromCache<Integer, String> supplier = new PairSupplierRefreshedFromCache<>([m
[31m-                segmentReader,[m
[31m-                cache, std);[m
[31m-        [m
[31m-        when(segmentReader.read()).thenReturn(pair2).thenReturn(pair3).thenReturn(pair4);[m
[31m-        when(cache.get(2)).thenReturn(std.getTombstone());[m
[31m-        when(cache.get(3)).thenReturn(std.getTombstone());[m
[31m-        when(cache.get(4)).thenReturn(null);[m
[31m-        [m
[31m-        assertEquals(pair4, supplier.read());[m
[31m-    }[m
[31m-    @Test[m
[31m-    void test_three_pairs_are_deleted() {[m
[31m-        final PairSupplierRefreshedFromCache<Integer, String> supplier = new PairSupplierRefreshedFromCache<>([m
[31m-                segmentReader,[m
[31m-                cache, std);[m
[31m-        [m
[31m-        when(segmentReader.read()).thenReturn(pair2).thenReturn(pair3).thenReturn(pair4).thenReturn(null);[m
[31m-        when(cache.get(2)).thenReturn(std.getTombstone());[m
[31m-        when(cache.get(3)).thenReturn(std.getTombstone());[m
[31m-        when(cache.get(4)).thenReturn(std.getTombstone());[m
[31m-[m
[31m-        assertNull(supplier.read());[m
[31m-    }[m
[31m-[m
[31m-}[m
