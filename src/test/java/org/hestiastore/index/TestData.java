package org.hestiastore.index;

import java.util.Collections;
import java.util.List;

import org.hestiastore.index.chunkstore.Chunk;
import org.hestiastore.index.chunkstore.ChunkHeader;
import org.hestiastore.index.chunkstore.ChunkPayload;
import org.hestiastore.index.datablockfile.DataBlockPayload;
import org.hestiastore.index.datablockfile.DataBlockSize;
import org.hestiastore.index.datatype.ConvertorFromBytes;
import org.hestiastore.index.datatype.ConvertorToBytes;
import org.hestiastore.index.datatype.TypeDescriptor;
import org.hestiastore.index.datatype.TypeDescriptorInteger;
import org.hestiastore.index.datatype.TypeDescriptorLong;
import org.hestiastore.index.datatype.TypeDescriptorString;
import org.hestiastore.index.segment.SegmentId;

/**
 * Class holds static test data.
 */
public final class TestData {

    public static final byte[] BYTE_ARRAY_1024 = new byte[] { 0x01, 0x23, 0x45,
            0x67, 0x11, 0x33, 0x55, 0x77, 0x22, 0x44, 0x66, 0x06, 0x18, 0x2A,
            0x3C, 0x4E, 0x5D, 0x6B, 0x7F, 0x0A, 0x1C, 0x2E, 0x3B, 0x4D, 0x59,
            0x6E, 0x7A, 0x0C, 0x1D, 0x2F, 0x3E, 0x4C, 0x10, 0x21, 0x32, 0x43,
            0x54, 0x65, 0x76, 0x07, 0x28, 0x39, 0x4A, 0x5B, 0x6C, 0x7D, 0x0E,
            0x1F, 0x30, 0x41, 0x52, 0x63, 0x74, 0x05, 0x16, 0x27, 0x38, 0x49,
            0x5A, 0x6B, 0x7C, 0x0D, 0x1E, 0x2F, 0x40, 0x51, 0x62, 0x73, 0x04,
            0x15, 0x26, 0x37, 0x48, 0x59, 0x6A, 0x7B, 0x0C, 0x1D, 0x2E, 0x3F,
            0x50, 0x61, 0x72, 0x03, 0x14, 0x25, 0x36, 0x47, 0x58, 0x69, 0x7A,
            0x0B, 0x1C, 0x2D, 0x3E, 0x4F, 0x60, 0x71, 0x02, 0x13, 0x24, 0x35,
            0x46, 0x57, 0x68, 0x79, 0x0A, 0x1B, 0x2C, 0x3D, 0x4E, 0x5F, 0x70,
            0x01, 0x12, 0x23, 0x34, 0x45, 0x56, 0x67, 0x78, 0x09, 0x1A, 0x2B,
            0x3C, 0x4D, 0x5E, 0x6F, 0x00, 0x11, 0x22, 0x33, 0x44, 0x55, 0x66,
            0x77, 0x08, 0x19, 0x2A, 0x3B, 0x4C, 0x5D, 0x6E, 0x7F, 0x0F, 0x1F,
            0x2F, 0x3F, 0x4F, 0x5F, 0x6F, 0x7E, 0x0E, 0x1E, 0x2E, 0x3E, 0x4E,
            0x5E, 0x6E, 0x7D, 0x01, 0x23, 0x45, 0x67, 0x11, 0x33, 0x55, 0x77,
            0x22, 0x44, 0x66, 0x06, 0x18, 0x2A, 0x3C, 0x4E, 0x5D, 0x6B, 0x7F,
            0x0A, 0x1C, 0x2E, 0x3B, 0x4D, 0x59, 0x6E, 0x7A, 0x0C, 0x1D, 0x2F,
            0x3E, 0x4C, 0x10, 0x21, 0x32, 0x43, 0x54, 0x65, 0x76, 0x07, 0x28,
            0x39, 0x4A, 0x5B, 0x6C, 0x7D, 0x0E, 0x1F, 0x30, 0x41, 0x52, 0x63,
            0x74, 0x05, 0x16, 0x27, 0x38, 0x49, 0x5A, 0x6B, 0x7C, 0x0D, 0x1E,
            0x2F, 0x40, 0x51, 0x62, 0x73, 0x04, 0x15, 0x26, 0x37, 0x48, 0x59,
            0x6A, 0x7B, 0x0C, 0x1D, 0x2E, 0x3F, 0x50, 0x61, 0x72, 0x03, 0x14,
            0x25, 0x36, 0x47, 0x58, 0x69, 0x7A, 0x0B, 0x1C, 0x2D, 0x3E, 0x4F,
            0x60, 0x71, 0x02, 0x13, 0x24, 0x35, 0x46, 0x57, 0x68, 0x79, 0x0A,
            0x1B, 0x2C, 0x3D, 0x4E, 0x5F, 0x70, 0x01, 0x12, 0x23, 0x34, 0x45,
            0x56, 0x67, 0x78, 0x09, 0x1A, 0x2B, 0x3C, 0x4D, 0x5E, 0x6F, 0x00,
            0x11, 0x22, 0x33, 0x44, 0x55, 0x66, 0x77, 0x08, 0x19, 0x2A, 0x3B,
            0x4C, 0x5D, 0x6E, 0x7F, 0x0F, 0x1F, 0x2F, 0x3F, 0x4F, 0x5F, 0x6F,
            0x7E, 0x0E, 0x1E, 0x2E, 0x3E, 0x4E, 0x5E, 0x6E, 0x7D, 0x01, 0x23,
            0x45, 0x67, 0x11, 0x33, 0x55, 0x77, 0x22, 0x44, 0x66, 0x06, 0x18,
            0x2A, 0x3C, 0x4E, 0x5D, 0x6B, 0x7F, 0x0A, 0x1C, 0x2E, 0x3B, 0x4D,
            0x59, 0x6E, 0x7A, 0x0C, 0x1D, 0x2F, 0x3E, 0x4C, 0x10, 0x21, 0x32,
            0x43, 0x54, 0x65, 0x76, 0x07, 0x28, 0x39, 0x4A, 0x5B, 0x6C, 0x7D,
            0x0E, 0x1F, 0x30, 0x41, 0x52, 0x63, 0x74, 0x05, 0x16, 0x27, 0x38,
            0x49, 0x5A, 0x6B, 0x7C, 0x0D, 0x1E, 0x2F, 0x40, 0x51, 0x62, 0x73,
            0x04, 0x15, 0x26, 0x37, 0x48, 0x59, 0x6A, 0x7B, 0x0C, 0x1D, 0x2E,
            0x3F, 0x50, 0x61, 0x72, 0x03, 0x14, 0x25, 0x36, 0x47, 0x58, 0x69,
            0x7A, 0x0B, 0x1C, 0x2D, 0x3E, 0x4F, 0x60, 0x71, 0x02, 0x13, 0x24,
            0x35, 0x46, 0x57, 0x68, 0x79, 0x0A, 0x1B, 0x2C, 0x3D, 0x4E, 0x5F,
            0x70, 0x01, 0x12, 0x23, 0x34, 0x45, 0x56, 0x67, 0x78, 0x09, 0x1A,
            0x2B, 0x3C, 0x4D, 0x5E, 0x6F, 0x00, 0x11, 0x22, 0x33, 0x44, 0x55,
            0x66, 0x77, 0x08, 0x19, 0x2A, 0x3B, 0x4C, 0x5D, 0x6E, 0x7F, 0x0F,
            0x1F, 0x2F, 0x3F, 0x4F, 0x5F, 0x6F, 0x7E, 0x0E, 0x1E, 0x2E, 0x3E,
            0x4E, 0x5E, 0x6E, 0x7D, 0x01, 0x23, 0x45, 0x67, 0x11, 0x33, 0x55,
            0x77, 0x22, 0x44, 0x66, 0x06, 0x18, 0x2A, 0x3C, 0x4E, 0x5D, 0x6B,
            0x7F, 0x0A, 0x1C, 0x2E, 0x3B, 0x4D, 0x59, 0x6E, 0x7A, 0x0C, 0x1D,
            0x2F, 0x3E, 0x4C, 0x10, 0x21, 0x32, 0x43, 0x54, 0x65, 0x76, 0x07,
            0x28, 0x39, 0x4A, 0x5B, 0x6C, 0x7D, 0x0E, 0x1F, 0x30, 0x41, 0x52,
            0x63, 0x74, 0x05, 0x16, 0x27, 0x38, 0x49, 0x5A, 0x6B, 0x7C, 0x0D,
            0x1E, 0x2F, 0x40, 0x51, 0x62, 0x73, 0x04, 0x15, 0x26, 0x37, 0x48,
            0x59, 0x6A, 0x7B, 0x0C, 0x1D, 0x2E, 0x3F, 0x50, 0x61, 0x72, 0x03,
            0x14, 0x25, 0x36, 0x47, 0x58, 0x69, 0x7A, 0x0B, 0x1C, 0x2D, 0x3E,
            0x4F, 0x60, 0x71, 0x02, 0x13, 0x24, 0x35, 0x46, 0x57, 0x68, 0x79,
            0x0A, 0x1B, 0x2C, 0x3D, 0x4E, 0x5F, 0x70, 0x01, 0x12, 0x23, 0x34,
            0x45, 0x56, 0x67, 0x78, 0x09, 0x1A, 0x2B, 0x3C, 0x4D, 0x5E, 0x6F,
            0x00, 0x11, 0x22, 0x33, 0x44, 0x55, 0x66, 0x77, 0x08, 0x19, 0x2A,
            0x3B, 0x4C, 0x5D, 0x6E, 0x7F, 0x0F, 0x1F, 0x2F, 0x3F, 0x4F, 0x5F,
            0x6F, 0x7E, 0x0E, 0x1E, 0x2E, 0x3E, 0x4E, 0x5E, 0x6E, 0x7D, 0x01,
            0x23, 0x45, 0x67, 0x11, 0x33, 0x55, 0x77, 0x22, 0x44, 0x66, 0x06,
            0x18, 0x2A, 0x3C, 0x4E, 0x5D, 0x6B, 0x7F, 0x0A, 0x1C, 0x2E, 0x3B,
            0x4D, 0x59, 0x6E, 0x7A, 0x0C, 0x1D, 0x2F, 0x3E, 0x4C, 0x10, 0x21,
            0x32, 0x43, 0x54, 0x65, 0x76, 0x07, 0x28, 0x39, 0x4A, 0x5B, 0x6C,
            0x7D, 0x0E, 0x1F, 0x30, 0x41, 0x52, 0x63, 0x74, 0x05, 0x16, 0x27,
            0x38, 0x49, 0x5A, 0x6B, 0x7C, 0x0D, 0x1E, 0x2F, 0x40, 0x51, 0x62,
            0x73, 0x04, 0x15, 0x26, 0x37, 0x48, 0x59, 0x6A, 0x7B, 0x0C, 0x1D,
            0x2E, 0x3F, 0x50, 0x61, 0x72, 0x03, 0x14, 0x25, 0x36, 0x47, 0x58,
            0x69, 0x7A, 0x0B, 0x1C, 0x2D, 0x3E, 0x4F, 0x60, 0x71, 0x02, 0x13,
            0x24, 0x35, 0x46, 0x57, 0x68, 0x79, 0x0A, 0x1B, 0x2C, 0x3D, 0x4E,
            0x5F, 0x70, 0x01, 0x12, 0x23, 0x34, 0x45, 0x56, 0x67, 0x78, 0x09,
            0x1A, 0x2B, 0x3C, 0x4D, 0x5E, 0x6F, 0x00, 0x11, 0x22, 0x33, 0x44,
            0x55, 0x66, 0x77, 0x08, 0x19, 0x2A, 0x3B, 0x4C, 0x5D, 0x6E, 0x7F,
            0x0F, 0x1F, 0x2F, 0x3F, 0x4F, 0x5F, 0x6F, 0x7E, 0x0E, 0x1E, 0x2E,
            0x3E, 0x4E, 0x5E, 0x6E, 0x7D, 0x01, 0x23, 0x45, 0x67, 0x11, 0x33,
            0x55, 0x77, 0x22, 0x44, 0x66, 0x06, 0x18, 0x2A, 0x3C, 0x4E, 0x5D,
            0x6B, 0x7F, 0x0A, 0x1C, 0x2E, 0x3B, 0x4D, 0x59, 0x6E, 0x7A, 0x0C,
            0x1D, 0x2F, 0x3E, 0x4C, 0x10, 0x21, 0x32, 0x43, 0x54, 0x65, 0x76,
            0x07, 0x28, 0x39, 0x4A, 0x5B, 0x6C, 0x7D, 0x0E, 0x1F, 0x30, 0x41,
            0x52, 0x63, 0x74, 0x05, 0x16, 0x27, 0x38, 0x49, 0x5A, 0x6B, 0x7C,
            0x0D, 0x1E, 0x2F, 0x40, 0x51, 0x62, 0x73, 0x04, 0x15, 0x26, 0x37,
            0x3E, 0x4F, 0x60, 0x71, 0x02, 0x13, 0x24, 0x35, 0x46, 0x57, 0x68,
            0x79, 0x0A, 0x1B, 0x2C, 0x3D, 0x4E, 0x5F, 0x70, 0x01, 0x12, 0x23,
            0x34, 0x45, 0x56, 0x67, 0x1A, 0x2B, 0x3C, 0x4D, 0x5E, 0x6F, 0x00,
            0x11, 0x22, 0x33, 0x44, 0x55, 0x66, 0x77, 0x08, 0x19, 0x2A, 0x3B,
            0x4C, 0x5D, 0x6E, 0x7F, 0x0F, 0x1F, 0x2F, 0x3F, 0x4F, 0x3E, 0x4E,
            0x5E, 0x6E, 0x7D, 0x01, 0x23, 0x45, 0x67, 0x11, 0x33, 0x55, 0x77,
            0x22, 0x44, 0x66, 0x06, 0x18, 0x2A, 0x3C, 0x4E, 0x5D, 0x6B, 0x7F,
            0x0A, 0x1C, 0x2E, 0x3B, 0x4D, 0x59, 0x6E, 0x7A, 0x0C, 0x1D, 0x2F,
            0x3E, 0x4C, 0x10, 0x21, 0x32, 0x43, 0x54, 0x65, 0x76, 0x07, 0x28,
            0x39, 0x4A, 0x5B, 0x6C, 0x7D, 0x0E, 0x1F, 0x30, 0x41, 0x52, 0x63,
            0x74, 0x05, 0x16, 0x27, 0x38, 0x49, 0x5A, 0x6B, 0x7C, 0x0D, 0x1E,
            0x2F, 0x40, 0x51, 0x62, 0x73, 0x04, 0x15, 0x26, 0x37, 0x48, 0x59,
            0x6A, 0x7B, 0x0C, 0x7F, 0x0F, 0x1F, 0x2F, 0x3F, 0x4F, 0x5F, 0x6F,
            0x7E, 0x0E, 0x1E, 0x2E, 0x3E, 0x4E, 0x5E, 0x6E, 0x7D };

    public static final byte[] BYTE_ARRAY_1008 = new byte[] { 0x01, 0x23, 0x45,
            0x67, 0x11, 0x33, 0x55, 0x77, 0x22, 0x44, 0x66, 0x06, 0x18, 0x2A,
            0x3C, 0x4E, 0x5D, 0x6B, 0x7F, 0x0A, 0x1C, 0x2E, 0x3B, 0x4D, 0x59,
            0x6E, 0x7A, 0x0C, 0x1D, 0x2F, 0x3E, 0x4C, 0x10, 0x21, 0x32, 0x43,
            0x54, 0x05, 0x16, 0x27, 0x38, 0x49, 0x5A, 0x6B, 0x7C, 0x0D, 0x1E,
            0x2F, 0x40, 0x51, 0x62, 0x73, 0x04, 0x15, 0x26, 0x37, 0x48, 0x59,
            0x6A, 0x7B, 0x0C, 0x1D, 0x2E, 0x3F, 0x50, 0x61, 0x72, 0x03, 0x14,
            0x25, 0x36, 0x47, 0x58, 0x69, 0x7A, 0x0B, 0x1C, 0x2D, 0x3E, 0x4F,
            0x60, 0x71, 0x02, 0x13, 0x24, 0x35, 0x46, 0x57, 0x68, 0x79, 0x0A,
            0x1B, 0x2C, 0x3D, 0x4E, 0x5F, 0x70, 0x01, 0x12, 0x23, 0x34, 0x45,
            0x56, 0x67, 0x78, 0x09, 0x1A, 0x2B, 0x3C, 0x4D, 0x5E, 0x6F, 0x00,
            0x11, 0x22, 0x33, 0x44, 0x55, 0x66, 0x77, 0x08, 0x19, 0x2A, 0x3B,
            0x4C, 0x5D, 0x6E, 0x7F, 0x0F, 0x1F, 0x2F, 0x3F, 0x4F, 0x5F, 0x6F,
            0x7E, 0x0E, 0x1E, 0x2E, 0x3E, 0x4E, 0x5E, 0x6E, 0x7D, 0x01, 0x23,
            0x45, 0x67, 0x11, 0x33, 0x55, 0x77, 0x22, 0x44, 0x66, 0x06, 0x18,
            0x2A, 0x3C, 0x4E, 0x5D, 0x6B, 0x7F, 0x0A, 0x1C, 0x2E, 0x3B, 0x4D,
            0x59, 0x6E, 0x7A, 0x0C, 0x1D, 0x2F, 0x3E, 0x4C, 0x10, 0x21, 0x32,
            0x43, 0x54, 0x65, 0x76, 0x07, 0x28, 0x39, 0x4A, 0x5B, 0x6C, 0x7D,
            0x0E, 0x1F, 0x30, 0x41, 0x52, 0x63, 0x74, 0x05, 0x16, 0x27, 0x38,
            0x49, 0x5A, 0x6B, 0x7C, 0x0D, 0x1E, 0x2F, 0x40, 0x51, 0x62, 0x73,
            0x04, 0x15, 0x26, 0x37, 0x48, 0x59, 0x6A, 0x7B, 0x0C, 0x1D, 0x2E,
            0x3F, 0x50, 0x61, 0x72, 0x03, 0x14, 0x25, 0x36, 0x47, 0x58, 0x69,
            0x7A, 0x0B, 0x1C, 0x2D, 0x3E, 0x4F, 0x60, 0x71, 0x02, 0x13, 0x24,
            0x35, 0x46, 0x57, 0x68, 0x79, 0x0A, 0x1B, 0x2C, 0x3D, 0x4E, 0x5F,
            0x70, 0x01, 0x12, 0x23, 0x34, 0x45, 0x56, 0x67, 0x78, 0x09, 0x1A,
            0x2B, 0x3C, 0x4D, 0x5E, 0x6F, 0x00, 0x11, 0x22, 0x33, 0x44, 0x55,
            0x66, 0x77, 0x08, 0x19, 0x2A, 0x3B, 0x4C, 0x5D, 0x6E, 0x7F, 0x0F,
            0x1F, 0x2F, 0x3F, 0x4F, 0x5F, 0x6F, 0x7E, 0x0E, 0x1E, 0x2E, 0x3E,
            0x4E, 0x5E, 0x6E, 0x7D, 0x01, 0x23, 0x45, 0x67, 0x11, 0x33, 0x55,
            0x77, 0x22, 0x44, 0x66, 0x06, 0x18, 0x2A, 0x3C, 0x4E, 0x5D, 0x6B,
            0x7F, 0x0A, 0x1C, 0x2E, 0x3B, 0x4D, 0x59, 0x6E, 0x7A, 0x0C, 0x1D,
            0x2F, 0x3E, 0x4C, 0x10, 0x21, 0x32, 0x43, 0x54, 0x65, 0x76, 0x07,
            0x28, 0x39, 0x4A, 0x5B, 0x6C, 0x7D, 0x0E, 0x1F, 0x30, 0x41, 0x52,
            0x63, 0x74, 0x05, 0x16, 0x27, 0x38, 0x49, 0x5A, 0x6B, 0x7C, 0x0D,
            0x1E, 0x2F, 0x40, 0x51, 0x62, 0x73, 0x04, 0x15, 0x26, 0x37, 0x48,
            0x59, 0x6A, 0x7B, 0x0C, 0x1D, 0x2E, 0x3F, 0x50, 0x61, 0x72, 0x03,
            0x14, 0x25, 0x36, 0x47, 0x58, 0x69, 0x7A, 0x0B, 0x1C, 0x2D, 0x3E,
            0x4F, 0x60, 0x71, 0x02, 0x13, 0x24, 0x35, 0x46, 0x57, 0x68, 0x79,
            0x0A, 0x1B, 0x2C, 0x3D, 0x4E, 0x5F, 0x70, 0x01, 0x12, 0x23, 0x34,
            0x45, 0x56, 0x67, 0x78, 0x09, 0x1A, 0x2B, 0x3C, 0x4D, 0x5E, 0x6F,
            0x00, 0x11, 0x22, 0x33, 0x44, 0x55, 0x66, 0x77, 0x08, 0x19, 0x2A,
            0x3B, 0x4C, 0x5D, 0x6E, 0x7F, 0x0F, 0x1F, 0x2F, 0x3F, 0x4F, 0x5F,
            0x6F, 0x7E, 0x0E, 0x1E, 0x2E, 0x3E, 0x4E, 0x5E, 0x6E, 0x7D, 0x01,
            0x23, 0x45, 0x67, 0x11, 0x33, 0x55, 0x77, 0x22, 0x44, 0x66, 0x06,
            0x18, 0x2A, 0x3C, 0x4E, 0x5D, 0x6B, 0x7F, 0x0A, 0x1C, 0x2E, 0x3B,
            0x4D, 0x59, 0x6E, 0x7A, 0x0C, 0x1D, 0x2F, 0x3E, 0x4C, 0x10, 0x21,
            0x32, 0x43, 0x54, 0x65, 0x76, 0x07, 0x28, 0x39, 0x4A, 0x5B, 0x6C,
            0x7D, 0x0E, 0x1F, 0x30, 0x41, 0x52, 0x63, 0x74, 0x05, 0x16, 0x27,
            0x38, 0x49, 0x5A, 0x6B, 0x7C, 0x0D, 0x1E, 0x2F, 0x40, 0x51, 0x62,
            0x73, 0x04, 0x15, 0x26, 0x37, 0x48, 0x59, 0x6A, 0x7B, 0x0C, 0x1D,
            0x2E, 0x3F, 0x50, 0x61, 0x72, 0x03, 0x14, 0x25, 0x36, 0x47, 0x58,
            0x69, 0x7A, 0x0B, 0x1C, 0x2D, 0x3E, 0x4F, 0x60, 0x71, 0x02, 0x13,
            0x24, 0x35, 0x46, 0x57, 0x68, 0x79, 0x0A, 0x1B, 0x2C, 0x3D, 0x4E,
            0x5F, 0x70, 0x01, 0x12, 0x23, 0x34, 0x45, 0x56, 0x67, 0x78, 0x09,
            0x1A, 0x2B, 0x3C, 0x4D, 0x5E, 0x6F, 0x00, 0x11, 0x22, 0x33, 0x44,
            0x55, 0x66, 0x77, 0x08, 0x19, 0x2A, 0x3B, 0x4C, 0x5D, 0x6E, 0x7F,
            0x0F, 0x1F, 0x2F, 0x3F, 0x4F, 0x5F, 0x6F, 0x7E, 0x0E, 0x1E, 0x2E,
            0x3E, 0x4E, 0x5E, 0x6E, 0x7D, 0x01, 0x23, 0x45, 0x67, 0x11, 0x33,
            0x55, 0x77, 0x22, 0x44, 0x66, 0x06, 0x18, 0x2A, 0x3C, 0x4E, 0x5D,
            0x6B, 0x7F, 0x0A, 0x1C, 0x2E, 0x3B, 0x4D, 0x59, 0x6E, 0x7A, 0x0C,
            0x1D, 0x2F, 0x3E, 0x4C, 0x10, 0x21, 0x32, 0x43, 0x54, 0x65, 0x76,
            0x07, 0x28, 0x39, 0x4A, 0x5B, 0x6C, 0x7D, 0x0E, 0x1F, 0x30, 0x41,
            0x52, 0x63, 0x74, 0x05, 0x16, 0x27, 0x38, 0x49, 0x5A, 0x6B, 0x7C,
            0x0D, 0x1E, 0x2F, 0x40, 0x51, 0x62, 0x73, 0x04, 0x15, 0x26, 0x37,
            0x48, 0x59, 0x6A, 0x7B, 0x0C, 0x1D, 0x2E, 0x3F, 0x50, 0x61, 0x72,
            0x03, 0x14, 0x25, 0x36, 0x47, 0x58, 0x69, 0x7A, 0x0B, 0x1C, 0x2D,
            0x3E, 0x4F, 0x60, 0x71, 0x02, 0x13, 0x24, 0x35, 0x46, 0x57, 0x68,
            0x79, 0x0A, 0x1B, 0x2C, 0x3D, 0x4E, 0x5F, 0x70, 0x01, 0x12, 0x23,
            0x34, 0x45, 0x56, 0x67, 0x78, 0x09, 0x1A, 0x2B, 0x3C, 0x4D, 0x5E,
            0x6F, 0x00, 0x11, 0x22, 0x33, 0x44, 0x55, 0x66, 0x77, 0x08, 0x19,
            0x2A, 0x3B, 0x4C, 0x5D, 0x6E, 0x7F, 0x0F, 0x1F, 0x2F, 0x3F, 0x4F,
            0x5F, 0x6F, 0x7E, 0x0E, 0x1E, 0x2E, 0x3E, 0x4E, 0x5E, 0x6E, 0x7D,
            0x01, 0x23, 0x45, 0x67, 0x11, 0x33, 0x55, 0x77, 0x22, 0x44, 0x66,
            0x06, 0x18, 0x2A, 0x3C, 0x4E, 0x5D, 0x6B, 0x7F, 0x0A, 0x1C, 0x2E,
            0x3B, 0x4D, 0x59, 0x6E, 0x7A, 0x0C, 0x1D, 0x2F, 0x3E, 0x4C, 0x10,
            0x21, 0x32, 0x43, 0x54, 0x65, 0x76, 0x07, 0x28, 0x39, 0x4A, 0x5B,
            0x6C, 0x7D, 0x0E, 0x1F, 0x30, 0x41, 0x52, 0x63, 0x74, 0x05, 0x16,
            0x27, 0x38, 0x49, 0x5A, 0x6B, 0x7C, 0x0D, 0x1E, 0x2F, 0x40, 0x51,
            0x62, 0x73, 0x04, 0x15, 0x26, 0x37, 0x3E, 0x4F, 0x60, 0x71, 0x02,
            0x13, 0x24, 0x35, 0x46, 0x57, 0x68, 0x79, 0x0A, 0x1B, 0x2C, 0x3D,
            0x4E, 0x5F, 0x70, 0x01, 0x12, 0x23, 0x34, 0x45, 0x56, 0x67, 0x1A,
            0x2B, 0x3C, 0x4D, 0x5E, 0x6F, 0x00, 0x11, 0x22, 0x33, 0x44, 0x55,
            0x66, 0x77, 0x08, 0x19, 0x2A, 0x3B, 0x4C, 0x5D, 0x6E, 0x7F, 0x0F,
            0x1F, 0x2F, 0x3F, 0x4F, 0x3E, 0x4E, 0x5E, 0x6E, 0x7D, 0x01, 0x23,
            0x45, 0x67, 0x11, 0x33, 0x55, 0x77, 0x22, 0x44, 0x66, 0x06, 0x18,
            0x2A, 0x3C, 0x4E, 0x5D, 0x6B, 0x7F, 0x0A, 0x1C, 0x2E, 0x3B, 0x4D,
            0x59, 0x6E, 0x7A, 0x0C, 0x1D, 0x2F, 0x3E, 0x4C, 0x10, 0x21, 0x32,
            0x43, 0x54, 0x65, 0x76, 0x07, 0x28, 0x39, 0x4A, 0x5B, 0x6C, 0x7D,
            0x0E, 0x1F, 0x30, 0x41, 0x52, 0x63, 0x74, 0x05, 0x16, 0x27, 0x38,
            0x49, 0x5A, 0x6B, 0x7C, 0x0D, 0x1E, 0x2F, 0x40, 0x51, 0x62, 0x73,
            0x04, 0x15, 0x26, 0x37, 0x48, 0x59, 0x6A, 0x7B, 0x0C, 0x7F, 0x0F,
            0x1F, 0x2F, 0x3F, 0x4F, 0x5F, 0x6F, 0x7E, 0x0E, 0x1E, 0x2E, 0x3E,
            0x4E, 0x5E, 0x6E, 0x7D };

    public static final byte[] BYTE_ARRAY_154 = new byte[] { //
            0x01, 0x23, 0x45, 0x67, 0x11, 0x33, 0x55, 0x77, 0x22, 0x44, 0x66,
            0x06, 0x18, 0x2A, 0x3C, 0x4E, 0x5D, 0x6B, 0x7F, 0x0A, 0x1C, 0x2E,
            0x3B, 0x4D, 0x59, 0x6E, 0x7A, 0x0C, 0x1D, 0x2F, 0x3E, 0x4C, 0x10,
            0x21, 0x32, 0x43, 0x54, 0x05, 0x16, 0x27, 0x38, 0x49, 0x5A, 0x6B,
            0x7C, 0x0D, 0x1E, 0x2F, 0x40, 0x51, 0x62, 0x73, 0x04, 0x15, 0x26,
            0x37, 0x48, 0x59, 0x6A, 0x7B, 0x0C, 0x1D, 0x2E, 0x3F, 0x50, 0x61,
            0x72, 0x03, 0x14, 0x25, 0x36, 0x47, 0x58, 0x69, 0x7A, 0x0B, 0x1C,
            0x2D, 0x3E, 0x4F, 0x60, 0x71, 0x02, 0x13, 0x24, 0x35, 0x46, 0x57,
            0x68, 0x79, 0x0A, 0x1B, 0x2C, 0x3D, 0x4E, 0x5F, 0x70, 0x01, 0x12,
            0x23, 0x34, 0x45, 0x56, 0x67, 0x78, 0x09, 0x1A, 0x2B, 0x3C, 0x4D,
            0x5E, 0x6F, 0x00, 0x11, 0x22, 0x33, 0x44, 0x55, 0x66, 0x77, 0x08,
            0x19, 0x2A, 0x3B, 0x4C, 0x5D, 0x6E, 0x7F, 0x0F, 0x1F, 0x2F, 0x3F,
            0x4F, 0x5F, 0x6F, 0x7E, 0x0E, 0x1E, 0x2E, 0x3E, 0x4E, 0x5E, 0x6E,
            0x55, 0x77, 0x22, 0x44, 0x1E, 0x2E, 0x3E, 0x4E, 0x5E, 0x6E, 0x7D };

    public static final DataBlockPayload PAYLOAD_1008 = DataBlockPayload
            .of(Bytes.of(BYTE_ARRAY_1008));
    public static final DataBlockPayload PAYLOAD_1008_2 = DataBlockPayload
            .of(Bytes.of(BYTE_ARRAY_1024).slice(0, 1008));
    public static final DataBlockPayload PAYLOAD_1024 = DataBlockPayload
            .of(Bytes.of(BYTE_ARRAY_1024));

    public static final TypeDescriptor<Long> TYPE_DESCRIPTOR_LONG = new TypeDescriptorLong();
    public static final ConvertorFromBytes<Long> LONG_CONVERTOR_FROM_BYTES = TYPE_DESCRIPTOR_LONG
            .getConvertorFromBytes();
    public static final ConvertorToBytes<Long> LONG_CONVERTOR_TO_BYTES = TYPE_DESCRIPTOR_LONG
            .getConvertorToBytes();

    public static final TypeDescriptor<String> TYPE_DESCRIPTOR_STRING = new TypeDescriptorString();
    public static final TypeDescriptor<Integer> TYPE_DESCRIPTOR_INTEGER = new TypeDescriptorInteger();

    public static final DataBlockSize DATA_BLOCK_SIZE = DataBlockSize
            .ofDataBlockSize(1024);

    public static final String STRING_9 = "test data";
    public static final Bytes BYTES_9 = Bytes.of(STRING_9.getBytes());
    public static final ChunkPayload CHUNK_PAYLOAD_9 = ChunkPayload.of(BYTES_9);

    public static final String STRING_15 = "super test data";
    public static final Bytes BYTES_15 = Bytes.of(STRING_15.getBytes());
    public static final ChunkPayload CHUNK_PAYLOAD_15 = ChunkPayload
            .of(BYTES_15);

    public static final Bytes BYTES_154 = Bytes.of(BYTE_ARRAY_154);
    public static final ChunkPayload CHUNK_PAYLOAD_154 = ChunkPayload
            .of(BYTES_154);

    public static final Bytes BYTES_1024 = Bytes.of(BYTE_ARRAY_1024);
    public static final ChunkPayload CHUNK_PAYLOAD_1008 = ChunkPayload
            .of(BYTES_1024.slice(0, 1008));

    public static final SegmentId SEGMENT_ID = SegmentId.of(13);
    public static final Pair<Integer, String> PAIR1 = Pair.of(1, "a");
    public static final Pair<Integer, String> PAIR2 = Pair.of(2, "b");
    public static final Pair<Integer, String> PAIR3 = Pair.of(3, "c");
    public static final Pair<Integer, String> PAIR4 = Pair.of(4, "d");
    public static final Pair<Integer, String> PAIR5 = Pair.of(5, "e");

    public static final List<Pair<Integer, String>> PAIR_LIST_3 = List.of(PAIR1,
            PAIR2, PAIR3);

    public static final List<Pair<Integer, String>> PAIR_LIST_EMPTY = Collections
            .emptyList();

    public static final Chunk CHUNK_15 = Chunk.of(ChunkHeader.of(
            ChunkHeader.MAGIC_NUMBER, 1, BYTES_15.length(), 321L), BYTES_15);
    public static final Chunk CHUNK_154 = Chunk.of(ChunkHeader.of(
            ChunkHeader.MAGIC_NUMBER, 1, BYTES_154.length(), 321L), BYTES_154);

    private TestData() {
        // Prevent instantiation
    }

}
